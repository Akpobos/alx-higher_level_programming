The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Import ``add_integer`` function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Add 1 and 2
    >>> add_integer(1, 2)
    3

Subtract 2 from 100
    >>> add_integer(100, -2)
    98

Add 2 to 98 using a default value for parameter b
    >>> add_integer(2)
    100

Subtract 2 from 100.3 testing float casting to integer
    >>> add_integer(100.3, -2)
    98

Add an integer and a string testing TypeError
    >>> add_integer(4, "School")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Test function without passing any parameters
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Add two strings
    >>> add_integer("1", "2")
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Passing None
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Case Overflow:

    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case Overflow 2:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case NaN:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer
